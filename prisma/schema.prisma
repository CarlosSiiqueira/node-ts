// docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Endereco {
  id            String          @id @default(uuid())
  logradouro    String
  numero        String
  complemento   String?
  cep           String
  cidade        String
  uf            String
  bairro        String
  Pessoas       Pessoas[]
  LocalEmbarque LocalEmbarque[]
  Fornecedor    Fornecedor[]
}

model Pessoas {
  id              String    @id @default(uuid())
  nome            String
  cpf             String
  sexo            String
  dataCadastro    DateTime  @default(now())
  observacoes     String?
  telefone        String?
  telefoneWpp     String?
  email           String
  contato         String?
  telefoneContato String?
  ativo           Boolean   @default(true)
  dataNascimento  DateTime?
  rg              String?

  Usuarios            Usuarios              @relation(fields: [usuarioCadastro], references: [id])
  usuarioCadastro     String
  Endereco            Endereco[]
  ExcursaoOnibus      ExcursaoOnibus[]
  PassageiroEmbarque  PassageiroEmbarque[]
  Vendas              Vendas[]
  Transacoes          Transacoes[]
  ExcursaoPassageiros ExcursaoPassageiros[]
}

model Usuarios {
  id              String   @id @default(uuid())
  nome            String
  username        String   @unique
  password        String
  dataCadastro    DateTime @default(now())
  usuarioCadastro String?
  tipo            Int
  email           String
  ativo           Boolean  @default(true)
  comissao        Float?
  meta            Float?

  Pessoas               Pessoas[]
  Pacotes               Pacotes[]
  FormaPagamento        FormaPagamento[]
  ContaBancaria         ContaBancaria[]
  Produtos              Produtos[]
  ExcursaoQuartos       ExcursaoQuartos[]
  ExcursaoOnibus        ExcursaoOnibus[]
  LocalEmbarque         LocalEmbarque[]
  PassageiroEmbarque    PassageiroEmbarque[]
  Excursao              Excursao[]
  Vendas                Vendas[]
  Transacoes            Transacoes[]
  Fornecedor            Fornecedor[]
  CategoriaTransacao    CategoriaTransacao[]
  TipoQuarto            TipoQuarto[]
  Reservas              Reservas[]
  SubCategoriaTransacao SubCategoriaTransacao[]
}

model Pacotes {
  id             String   @id @default(uuid())
  nome           String
  descricao      String
  ativo          Boolean  @default(true)
  dataCadastro   DateTime @default(now())
  origem         Int      @default(1)
  tipoTransporte Int      @default(1)
  urlImagem      String?
  urlImgEsgotado String?
  idWP           Int?
  destino        String
  categoria      Int?

  Destinos        Destinos?    @relation(fields: [codigoDestino], references: [id])
  codigoDestino   String?
  Usuarios        Usuarios     @relation(fields: [usuarioCadastro], references: [id])
  usuarioCadastro String
  Excursao        Excursao[]
  Vendas          Vendas[]
  Transacoes      Transacoes[]
}

model FormaPagamento {
  id                 String   @id @default(uuid())
  nome               String
  dataCadastro       DateTime @default(now())
  taxa               Float
  taxa2x             Float?
  taxa3x             Float?
  taxa4x             Float?
  taxa5x             Float?
  taxa6x             Float?
  taxa7x             Float?
  taxa8x             Float?
  taxa9x             Float?
  taxa10x            Float?
  taxa11x            Float?
  taxa12x            Float?
  qtdDiasRecebimento Int
  ativo              Boolean  @default(true)

  Usuarios        Usuarios     @relation(fields: [usuarioCadastro], references: [id])
  usuarioCadastro String
  Vendas          Vendas[]
  Transacoes      Transacoes[]
}

model ContaBancaria {
  id           String   @id @default(uuid())
  nome         String
  ativo        Boolean  @default(true)
  saldo        Float    @default(0)
  dataCadastro DateTime @default(now())

  Usuarios        Usuarios     @relation(fields: [usuarioCadastro], references: [id])
  usuarioCadastro String
  Transacoes      Transacoes[]
}

model Produtos {
  id           String    @id @default(uuid())
  nome         String
  estoque      Int
  dataCompra   DateTime?
  dataCadastro DateTime
  ativo        Boolean   @default(true)

  Fornecedor       Fornecedor   @relation(fields: [codigoFornecedor], references: [id])
  codigoFornecedor String
  Usuarios         Usuarios     @relation(fields: [usuarioCadastro], references: [id])
  usuarioCadastro  String
  Vendas           Vendas[]
  Transacoes       Transacoes[]
}

model ExcursaoQuartos {
  id           String   @id @default(uuid())
  numeroQuarto String
  dataCadastro DateTime @default(now())

  TipoQuarto      TipoQuarto            @relation(fields: [idTipoQuarto], references: [id])
  idTipoQuarto    String
  Excursao        Excursao              @relation(fields: [codigoExcursao], references: [id])
  codigoExcursao  String
  Passageiros     ExcursaoPassageiros[]
  Usuarios        Usuarios              @relation(fields: [usuarioCadastro], references: [id])
  usuarioCadastro String
}

model ExcursaoOnibus {
  id            String   @id @default(uuid())
  numeroCadeira String
  dataCadastro  DateTime @default(now())

  Pessoa           Pessoas  @relation(fields: [codigoPassageiro], references: [id])
  codigoPassageiro String
  Excursao         Excursao @relation(fields: [codigoExcursao], references: [id])
  codigoExcursao   String
  Usuarios         Usuarios @relation(fields: [usuarioCadastro], references: [id])
  usuarioCadastro  String
}

model LocalEmbarque {
  id           String   @id @default(uuid())
  nome         String
  observacoes  String?
  horaEmbarque String
  dataCadastro DateTime @default(now())
  ativo        Boolean  @default(true)

  Endereco            Endereco              @relation(fields: [codigoEndereco], references: [id])
  codigoEndereco      String
  Usuarios            Usuarios              @relation(fields: [usuarioCadastro], references: [id])
  usuarioCadastro     String
  PassageiroEmbarque  PassageiroEmbarque[]
  ExcursaoPassageiros ExcursaoPassageiros[]
}

model PassageiroEmbarque {
  id           String   @id @default(uuid())
  embarcou     Boolean  @default(false)
  horaEmbarque String
  dataCadastro DateTime @default(now())

  LocalEmbarque       LocalEmbarque @relation(fields: [codigoLocalEmbarque], references: [id])
  codigoLocalEmbarque String
  Excursao            Excursao      @relation(fields: [codigoExcursao], references: [id])
  codigoExcursao      String
  Passageiro          Pessoas       @relation(fields: [codigoPassageiro], references: [id])
  codigoPassageiro    String
  Usuarios            Usuarios      @relation(fields: [usuarioCadastro], references: [id])
  usuarioCadastro     String
}

model Excursao {
  id              String   @id @default(uuid())
  nome            String
  dataInicio      DateTime
  dataFim         DateTime
  observacoes     String?
  dataCadastro    DateTime @default(now())
  ativo           Boolean  @default(true)
  gerouFinanceiro Boolean  @default(false)
  vagas           Int
  valor           Float
  publicadoSite   Boolean  @default(false)

  Pacotes             Pacotes               @relation(fields: [codigoPacote], references: [id])
  codigoPacote        String
  Usuarios            Usuarios              @relation(fields: [usuarioCadastro], references: [id])
  usuarioCadastro     String
  ExcursaoQuartos     ExcursaoQuartos[]
  ExcursaoOnibus      ExcursaoOnibus[]
  PassageiroEmbarque  PassageiroEmbarque[]
  Transacoes          Transacoes[]
  ExcursaoPassageiros ExcursaoPassageiros[]
}

model Vendas {
  id        String   @id @default(uuid())
  valor     Float
  tipo      Int
  qtd       Int
  efetivada Boolean  @default(false)
  data      DateTime @default(now())
  origem    Int      @default(1)

  Pessoas              Pessoas        @relation(fields: [codigoCliente], references: [id])
  codigoCliente        String
  FormaPagamento       FormaPagamento @relation(fields: [codigoFormaPagamento], references: [id])
  codigoFormaPagamento String
  Produtos             Produtos?      @relation(fields: [codigoProduto], references: [id])
  codigoProduto        String?
  Pacotes              Pacotes?       @relation(fields: [codigoPacote], references: [id])
  codigoPacote         String?
  Usuarios             Usuarios       @relation(fields: [usuarioCadastro], references: [id])
  usuarioCadastro      String
}

model Destinos {
  id           String   @id @default(uuid())
  nome         String
  ativo        Boolean  @default(true)
  dataCadastro DateTime @default(now())

  Pacotes Pacotes[]
}

model Transacoes {
  id                        String   @id @default(uuid())
  tipo                      Int
  valor                     Float
  vistoAdmin                Boolean  @default(false)
  data                      DateTime @default(now())
  efetivado                 Boolean  @default(false)
  observacao                String?
  ativo                     Boolean
  numeroComprovanteBancario String?
  dataPrevistaRecebimento   DateTime
  idWP                      Int?

  Pessoas              Pessoas?            @relation(fields: [codigoPessoa], references: [id])
  codigoPessoa         String?
  Fornecedor           Fornecedor?         @relation(fields: [codigoFornecedor], references: [id])
  codigoFornecedor     String?
  Excursao             Excursao?           @relation(fields: [codigoExcursao], references: [id])
  codigoExcursao       String?
  Produtos             Produtos?           @relation(fields: [codigoProduto], references: [id])
  codigoProduto        String?
  Pacotes              Pacotes?            @relation(fields: [codigoPacote], references: [id])
  codigoPacote         String?
  FormaPagamento       FormaPagamento      @relation(fields: [codigoFormaPagamento], references: [id])
  codigoFormaPagamento String
  CategoriaTransacao   CategoriaTransacao? @relation(fields: [codigoCategoria], references: [id])
  codigoCategoria      String?
  ContaBancaria        ContaBancaria?      @relation(fields: [codigoContaBancaria], references: [id])
  codigoContaBancaria  String?
  Usuarios             Usuarios            @relation(fields: [usuarioCadastro], references: [id])
  usuarioCadastro      String
  Reservas             Reservas[]
}

model Fornecedor {
  id              String   @id @default(uuid())
  nome            String
  fantasia        String
  cnpj            String
  site            String?
  ativo           Boolean  @default(true)
  dataCadastro    DateTime @default(now())
  observacoes     String?
  telefone        String?
  email           String
  contato         String?
  telefoneContato String?

  Endereco        Endereco     @relation(fields: [codigoEndereco], references: [id])
  codigoEndereco  String
  Transacoes      Transacoes[]
  Usuarios        Usuarios     @relation(fields: [usuarioCadastro], references: [id])
  usuarioCadastro String
  Produtos        Produtos[]
}

model ExcursaoPassageiros {
  id           String   @id @default(uuid())
  dataCadastro DateTime @default(now())

  Reservas      Reservas          @relation(fields: [reserva], references: [id])
  reserva       String
  Excursao      Excursao          @relation(fields: [idExcursao], references: [id])
  idExcursao    String
  Pessoa        Pessoas           @relation(fields: [idPassageiro], references: [id])
  idPassageiro  String
  LocalEmbarque LocalEmbarque     @relation(fields: [localEmbarque], references: [id])
  localEmbarque String
  Quartos       ExcursaoQuartos[]
}

model CategoriaTransacao {
  id           String   @id @default(uuid())
  nome         String
  tipo         Int
  dataCadastro DateTime @default(now())

  Usuarios           Usuarios              @relation(fields: [codigoUsuario], references: [id])
  codigoUsuario      String
  SubCategoria       SubCategoriaTransacao @relation(fields: [codigoSubCategoria], references: [id])
  codigoSubCategoria String
  Transacoes         Transacoes[]
}

model SubCategoriaTransacao {
  id           String   @id @default(uuid())
  nome         String
  dataCadastro DateTime @default(now())

  Usuarios           Usuarios             @relation(fields: [codigoUsuario], references: [id])
  codigoUsuario      String
  CategoriaTransacao CategoriaTransacao[]
}

model TipoQuarto {
  id           String   @id @default(uuid())
  nome         String
  dataCadastro DateTime @default(now())

  Usuarios        Usuarios          @relation(fields: [codigoUsuario], references: [id])
  codigoUsuario   String
  ExcursaoQuartos ExcursaoQuartos[]
}

model Reservas {
  id           String   @id @default(uuid())
  reserva      String
  dataCadastro DateTime @default(now())

  Usuario             Usuarios?             @relation(fields: [codigoUsuario], references: [id])
  codigoUsuario       String?
  Transacao           Transacoes            @relation(fields: [codigoFinanceiro], references: [id])
  codigoFinanceiro    String
  ExcursaoPassageiros ExcursaoPassageiros[]
}
